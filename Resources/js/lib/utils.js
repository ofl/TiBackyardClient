// Generated by CoffeeScript 1.4.0
(function() {
  var GLOBAL, thisYear;

  GLOBAL = require('js/lib/global');

  thisYear = (new Date()).getYear();

  exports.formatDate = function(date_string) {
    var date, datetime, day, format_str, month, time, year;
    datetime = new Date(Date.parse(date_string));
    time = String.format("%02.0f:%02.0f", datetime.getHours(), datetime.getMinutes());
    day = GLOBAL.WEEK[datetime.getDay()];
    year = datetime.getFullYear();
    month = datetime.getMonth() + 1;
    date = datetime.getDate();
    if (datetime.getYear() !== thisYear) {
      format_str = "" + year + "年" + month + "月" + date + "日 (" + day + ")";
    } else {
      format_str = "" + month + "月" + date + "日 (" + day + ") " + time;
    }
    return format_str;
  };

  exports.toRailsDate = function(datetime) {
    var date, hour, minute, month, year;
    year = datetime.getFullYear();
    month = datetime.getMonth() + 1;
    date = datetime.getDate();
    hour = datetime.getHours();
    minute = datetime.getMinutes();
    return String.format("%02.0f-%02.0f-%02.0fT%02.0f:%02.0f:00+09:00", year, month, date, hour, minute);
  };

  exports.parseUrlScheme = function(url) {
    var action, array, key_value_array, key_value_str, obj, str, _i, _len;
    str = url.replace("" + GLOBAL.APP_URL_SCHEME, '');
    str.match(/(.+?)\?(.*)/);
    action = RegExp.$1;
    array = RegExp.$2.split('&');
    obj = {
      action: action
    };
    for (_i = 0, _len = array.length; _i < _len; _i++) {
      key_value_str = array[_i];
      key_value_array = key_value_str.split('=');
      if (key_value_array.length = 2) {
        obj[key_value_array[0]] = decodeURIComponent(key_value_array[1]);
      }
    }
    return obj;
  };

  exports.encodeQueryData = function(data) {
    var k, ret, v;
    ret = [];
    for (k in data) {
      v = data[k];
      ret.push(encodeURIComponent(k) + "=" + encodeURIComponent(v));
    }
    return ret.join("&");
  };

  exports.createGetReguestUrl = function(url, data) {
    if (data) {
      url = url + "?" + exports.encodeQueryData(data);
    }
    return url;
  };

  exports.saveUserData = function() {
    Ti.App.Properties.setString('user', JSON.stringify(GLOBAL.user));
  };

}).call(this);
